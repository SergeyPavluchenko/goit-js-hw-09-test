{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlCQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAE9B,SAAkBC,GAChBA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,OAAEA,EAAMC,KAAEA,GAASJ,EAAIK,cAAcC,SAE5CC,EAAYC,OAAOL,EAAOM,OAC1BC,EAAUF,OAAOJ,EAAKK,OACtBE,EAAWH,OAAON,EAAMO,OAE9B,IAAK,IAAIG,EAAW,EAAGA,GAAYL,EAAWK,IAAY,CAExDzB,EAAcyB,EADCD,EAAWD,EAAUE,GAEjCC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,IAEhEW,EAAIK,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formPromises = document.querySelector('.form');\n\nformPromises.addEventListener('submit', onSubmit);\n\nfunction onSubmit(eve) {\n  eve.preventDefault();\n  const { delay, amount, step } = eve.currentTarget.elements;\n\n  const numAmount = Number(amount.value);\n  const numStep = Number(step.value);\n  const numDelay = Number(delay.value);\n\n  for (let position = 1; position <= numAmount; position++) {\n    const delays = numDelay + numStep * position;\n    createPromise(position, delays)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    eve.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","eve","preventDefault","delay1","amount","step","currentTarget","elements","numAmount","Number","value","numStep","numDelay","position1","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.2e97b368.js.map"}